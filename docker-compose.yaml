services:
  db:
    image: mariadb:latest
    container_name: mariadb_wildlens
    env_file:
      - .env.db
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./db/initfile.sql:/docker-entrypoint-initdb.d/initfile.sql
    networks:
      - wildlens_db
    healthcheck:
      test: [ "CMD", "mariadb-admin", "ping", "-h", "127.0.0.1" ]
      interval: 25s
      retries: 10
      start_period: 30s

  wildlens_backend:
    image: registry.spokayhub.top/wildlens-backend:latest
    container_name: wildlens_backend
    restart: unless-stopped
    env_file:
      - .env.backend
    ports:
      - "8002:8002"
    depends_on:
      db:
        condition: service_healthy
      wildlens_prediction:
        condition: service_started
    networks:
      - wildlens_backend
      - wildlens_db

  wildlens_prediction:
    image: registry.spokayhub.top/wildlens-prediction:latest
    container_name: wildlens_prediction
    restart: unless-stopped
    env_file:
      - .env.prediction
    networks:
      - wildlens_backend
    volumes:
      - ./wildlens_prediction/prediction_models:/app/prediction_models
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, utility]


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - wildlens_backend
      - wildlens_visualization



networks:
  wildlens_backend:
    driver: bridge
  wildlens_db:
    driver: bridge
  wildlens_visualization:
    external: true
    name: wildlens_visualization

volumes:
  mariadb_data:
    driver: local

  prom_data:
    driver: local

  grafana_data:
    driver: local

  prediction_models:
    driver: local